{"version":3,"sources":["components/selectValue.jsx","components/CellData.jsx","components/HeadLineTable.jsx","components/Table.jsx","components/NotationDescriptions.jsx","components/App.jsx","index.js"],"names":["SelectValue","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","selectedMentor","setState","onMentorSelection","value","localStorage","setItem","JSON","stringify","state","getItem","parse","label","inherits","createClass","key","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","stop","apply","arguments","data","option","keys","mentors","map","item","mentorGithub","react_default","createElement","react_select_esm","onChange","options","Component","CellData","_ref","nameClass","className","HeadLineTable","student","target","href","linkGithub","Table","_getPrototypeOf2","_len","length","args","Array","_key","concat","HeadListTasks","mentor","id","students","stud","listTasks","tasks","link","page","head","_this$props","NotationDescriptions","App","isLoading","nickName","_this2","fetch","then","response","json","catch","err","console","log","_this$state","react","selectValue_SelectValue","Table_Table","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.73fa8f14.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport '../style/selectValue.css';\r\n\r\nexport class SelectValue extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      selectedMentor: localStorage.getItem(\"Mentor-Dashboard\") ? JSON.parse(localStorage.getItem(\"Mentor-Dashboard\")) : {value: null, label: null},\r\n    }\r\n  }\r\n  \r\n  handleChange = (selectedMentor) => {\r\n    this.setState({ selectedMentor });\r\n    this.props.onMentorSelection(selectedMentor.value);\r\n    localStorage.setItem(\"Mentor-Dashboard\", JSON.stringify(selectedMentor));\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.props.onMentorSelection(this.state.selectedMentor.value);\r\n  }\r\n\r\n  \r\n  render() {\r\n    \r\n    const { selectedMentor} = this.state;\r\n    const { data } = this.props;\r\n    const option = Object.keys(data.mentors).map(item=>{ \r\n      return {value: data.mentors[item].mentorGithub, label: data.mentors[item].mentorGithub \r\n  }\r\n  });\r\n  \r\n    return (\r\n        <Select\r\n          value={selectedMentor}\r\n          onChange={this.handleChange}\r\n          options={option}\r\n        />\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default ({ nameClass }) => {\r\n  return (\r\n      <td className={nameClass}>{nameClass}</td>\r\n  );\r\n};","import React from 'react';\r\n\r\nexport default ({ student }) => {\r\n  return (\r\n      <th><a target={\"_blank\"} href={student.linkGithub}>{student.student}</a></th>\r\n  );\r\n};","import React, { Component } from 'react';\r\nimport CellData from './CellData';\r\nimport HeadLineTable from './HeadLineTable';\r\nimport '../style/Table.css';\r\n\r\nexport class Table extends Component {\r\n\r\n  HeadListTasks = (data, mentor) =>  <tr key={ data.mentors[mentor].id }><th>{'Name tasks'}</th>\r\n  {data.mentors[mentor].students.map((stud) => <HeadLineTable key={ stud.id } student = { stud } />\r\n)}</tr>;\r\n\r\n\r\n  listTasks = (data, mentor) => \r\n    Object.keys(data.tasks)\r\n      .map(item => <tr key={ data.tasks[item].id }><td><a target={ '_blank' } href={ data.tasks[item].link }>{ item }</a></td>{ data.mentors[mentor].students\r\n        .map((stud) => <CellData key={ stud.tasks[item].id } nameClass={ stud.tasks[item].className } />\r\n      )}</tr> \r\n    );\r\n  \r\n  render() {\r\n    let page;\r\n    let head;\r\n    \r\n    const { data, mentor } = this.props;\r\n    if (data && mentor) {\r\n\r\n      head = this.HeadListTasks(data, mentor);\r\n      page = this.listTasks(data, mentor);\r\n\r\n    }\r\n\r\n    else {\r\n\r\n      head = <tr><td>{ 'not students' }</td></tr>;\r\n      page = <tr><td>{ 'not data' }</td></tr>;\r\n    \r\n    }\r\n    return (\r\n      <table>\r\n        <tbody>\r\n          { head }\r\n          { page }\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        <tr>\r\n          <td className={'green'}>xxxx</td><td className={'white'}>{'- checked by mentor  '}</td>\r\n          <td className={'yellow'}>xxxx</td><td className={'white'}>{'- students working on tdat task now  '}</td>\r\n          <td className={'gray'}>xxxx</td><td className={'white'}>{'- task in todo state  '}</td>\r\n          <td className={'pink'}>xxxx</td><td className={'white'}>{'- need to check  '}</td>\r\n          <td className={'red'}>xxxx</td><td className={'white'}>{'- checked by mentime for checking is gone and no mark from mentor  '}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n};","import React, { Component, Fragment } from 'react';\nimport { SelectValue } from './selectValue.jsx';\nimport { Table } from './Table.jsx'\nimport Description from './NotationDescriptions.jsx'\nimport '../style/App.css'; \n\n\nexport class App extends Component {\n  state = {\n    isLoading: true,\n    data: null,\n    mentor: null,\n  }\n\n  onMentorSelection = (nickName) => {\n    this.setState({ mentor: nickName })\n }\n\nasync componentDidMount() {\n    await fetch('./data.json')\n      .then(response => response.json())\n      .then((data) => {\n        this.setState({ data }, () => this.setState({ isLoading: false }));\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n\n    const {data, isLoading, mentor } = this.state;\n  \n  if (isLoading) {\n    return (\n      <div>\n        <h3>Loading...</h3>\n      </div>\n    );\n  } else\n    return (\n      <Fragment>\n        <div className={'headline'}>\n          <h1>Mentor dashboard</h1>\n        </div>\n        <div className={'wrapper-search'}>\n          <p>Select mentor: </p> \n          <SelectValue \n            data={data}\n            onMentorSelection = {this.onMentorSelection}\n          />\n        </div>\n        <Table mentor = {mentor} data = {data} />\n        <Description />\n      </Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n "],"sourceRoot":""}